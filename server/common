# vim: ft=sh

source config.server

RETURN_OK=0
RETURN_SERVER_ERROR=1
RETURN_USER_ERROR=2

log_info() {
	script="$(basename "$0" .sh)"
	message="$1"
	
	logger -s -t "${SYSLOG_TAG}" -p "${SYSLOG_FACILITY}.info" "[${request_id}:${script}]:INFO: ${message}"
}

log_err() {
	script="$(basename "$0" .sh)"
	error_code="$1"
	shift
	message=$*
	
	log_message="$(logger -s -t "${SYSLOG_TAG}" -p "${SYSLOG_FACILITY}.err" "[${request_id}:${script}]:ERROR: ${message}" 2>&1)"
	echo "${log_message}"

	request_dir="${REQUESTS_DIR}/${request_id}"
	echo "${log_message}" > "${request_dir}/error_message"

	# mail admin on server error
	if [ "${MAIL_ON_ERROR}" = "true" ] && [ "${error_code}" -eq "${RETURN_SERVER_ERROR}" ]; then
		echo "${log_message}" | mail -s "SAXSfit error $(date)" "${SERVER_ADMIN_EMAIL}"
	fi
}

exit_error() {
	error_code="$1"
	shift
	message=$*

	request_dir="${REQUESTS_DIR}/${request_id}"

	if [ "${error_code}" -eq "${RETURN_USER_ERROR}" ]; then
		echo "user_error" > "${request_dir}/state"
	else
		echo "server_error" > "${request_dir}/state"
	fi

	log_err "${error_code}" "${message}"

	exit "${error_code}"
}

update_results() {
	file="$1"
	field="$2"
	value="$3"
	found=0

	rm ${file}.tmp
	while read line; do
		if echo "$line" | grep -q "^${field}:" 2>/dev/null; then
			echo "$field: $value" >>${file}.tmp
			found=1
		else
			echo $line >>${file}.tmp
		fi

	done <"$file"

	if [ $found -eq 0 ]; then 
		echo "$field: $value" >>${file}.tmp
	fi

	mv -f ${file}.tmp $file
}

extract_param() {
	file=$1
	param=$2

	grep "^$param:" $file | sed "s/^$param: *//"
}
